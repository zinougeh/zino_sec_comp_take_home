pipeline {
    agent any

    environment {
        SSH_DIR = "/var/lib/jenkins/.ssh"
    }

    stages {
        stage('Initialization') {
            steps {
                deleteDir()
                sh 'git clone https://github.com/zinougeh/zino_sec_comp_take_home.git'
            }
        }

        stage('Infra Deployment via terraform') {
            steps {
                withCredentials([
                    [$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'AWS_Access', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'],
                    sshUserPrivateKey(credentialsId: 'sec_com_ass_key_pair', keyFileVariable: 'SSH_KEY_PATH')
                ]) {
                    dir('zino_sec_comp_take_home/task1/terraform') {
                        sh 'terraform init'
                        sh 'terraform apply -auto-approve -var="ssh_public_key=' + SSH_KEY_PATH + '"'
                        sleep time: 600, unit: 'SECONDS'
                        script {
                            env.EC2_PUBLIC_IP = sh(script: 'terraform output instance_public_ip', returnStdout: true).trim()
                        }
                    }
                }
            }
        }

        stage('Configure jenkins user on EC2 instance') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'sec_com_ass_key_pair', keyFileVariable: 'SSH_KEY_PATH')]) {
                    sh """
                        ssh -o StrictHostKeyChecking=no -i "$SSH_KEY_PATH" ubuntu@${EC2_PUBLIC_IP} "sudo adduser --quiet --disabled-password --shell /bin/bash --home /var/lib/jenkins --gecos 'Jenkins' jenkins"
                        ssh -o StrictHostKeyChecking=no -i "$SSH_KEY_PATH" ubuntu@${EC2_PUBLIC_IP} "sudo mkdir -p /var/lib/jenkins/.ssh"
                        scp -o StrictHostKeyChecking=no -i "$SSH_KEY_PATH" $SSH_DIR/id_rsa.pub ubuntu@${EC2_PUBLIC_IP}:/var/lib/jenkins/.ssh/authorized_keys
                        ssh -o StrictHostKeyChecking=no -i "$SSH_KEY_PATH" ubuntu@${EC2_PUBLIC_IP} "sudo chown -R jenkins:jenkins /var/lib/jenkins/.ssh; sudo chmod 700 /var/lib/jenkins/.ssh; sudo chmod 600 /var/lib/jenkins/.ssh/authorized_keys"
                    """
                }
            }
        }

        stage('ansible Configure MicroK8s on EC2') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'sec_com_ass_key_pair', keyFileVariable: 'SSH_KEY_PATH')]) {
                    sh 'mkdir -p $SSH_DIR'
                    sh 'cp $SSH_KEY_PATH $SSH_DIR/id_rsa'
                    sh 'chmod 600 $SSH_DIR/id_rsa' // Ensure proper permissions
                    dir('zino_sec_comp_take_home/task1/microk8s') {
                        sh 'echo [EC2] > temp_inventory.ini'
                        sh "echo ${EC2_PUBLIC_IP} ansible_ssh_user=jenkins ansible_ssh_private_key_file=$SSH_DIR/id_rsa >> temp_inventory.ini"
                        sh 'ansible-playbook ansible.yml -i temp_inventory.ini'
                    }
                }
            }
        }
        
        stage('Deploy SonarQube on Micro8s') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'sec_com_ass_key_pair', keyFileVariable: 'SSH_KEY_PATH')]) {
                    dir('zino_sec_comp_take_home/task1/sonar') {
                        sleep time: 600, unit: 'SECONDS'
                        sh """
                            scp -o StrictHostKeyChecking=no -i "${SSH_KEY_PATH}" -r sonarqube ubuntu@${EC2_PUBLIC_IP}:/tmp
                            ssh -o StrictHostKeyChecking=no -i "${SSH_KEY_PATH}" ubuntu@${EC2_PUBLIC_IP} 'sudo microk8s helm install sonar /tmp/sonarqube && sudo microk8s helm ls'
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline completed."
            deleteDir()
        }

        success {
            echo "Deployment completed successfully."
        }

        failure {
            echo "Deployment failed! Please check the logs for more information."
        }
    }
}
