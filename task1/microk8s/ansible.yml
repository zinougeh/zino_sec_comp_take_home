- name: MicroK8s Installation
  hosts: all
  become: yes  # If you need to escalate privileges to run the script
  environment:
    JENKINS_PIPELINE_TASK: "YES"  # Set the environment variable for tasks run in this playbook

  tasks:
    - name: Wait for SSH to become available
      wait_for:
        host: "{{ ansible_host }}"
        port: 22
        delay: 10
        timeout: 300
      delegate_to: localhost

    - name: Ensure the SSH key is in authorized_keys
      authorized_key:
        user: jenkins
        state: present
        key: "{{ lookup('file', '/var/lib/jenkins/.ssh/id_rsa.pub') }}"

    - name: Install the MicroK8s
      shell: |
        # Install microk8s
        echo "Inside snap install"
        sudo snap install microk8s --classic || echo "Already Installed"
        echo "Wait for microk8s to be ready"
        sudo microk8s status --wait-ready

    - name: Check for apt lock and identify process
      shell: lsof /var/lib/dpkg/lock-frontend
      register: lock_output
      failed_when: false
      changed_when: false

    - name: Get Process ID
      set_fact:
        lock_pid: "{{ lock_output.stdout.split()[1] }}"
      when: lock_output.stdout | length > 0

    - name: Check if the process has JENKINS_PIPELINE_TASK environment variable
      command: grep -z JENKINS_PIPELINE_TASK /proc/{{ lock_pid }}/environ
      register: is_pipeline_task
      failed_when: false
      changed_when: false
      when: lock_output.stdout | length > 0

    - name: Kill the process holding the apt lock if it's from the Jenkins pipeline
      command: kill -9 {{ lock_pid }}
      when: is_pipeline_task.rc == 0

    - name: Install nginx
      apt:
        name: nginx
        state: present

    - name: Copy nginx reverse proxy config for SonarQube
      copy:
        src: nginx-sonar-config.conf
        dest: /etc/nginx/sites-available/sonar

    - name: Enable nginx config
      file:
        src: /etc/nginx/sites-available/sonar
        dest: /etc/nginx/sites-enabled/sonar
        state: link

    - name: Restart nginx
      service:
        name: nginx
        state: restarted
